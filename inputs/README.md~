# Input settings setup
All 5 the files enlisted are required to run the framework
```
python3 top_module.py \
--set <path_to_settings_file> \
--map <path_to_mapping_file> \
--mempool <path_to_mempool_file> \
--arch <path_to_arch_file> \
--mac <path_to_mac_array_file>
```
## Setting file
The setting file (to be defined with the  ``--set`` flag) describes:
- Paths to the output file (``result_path``, ``result_filename``)
- General settings for the framework
  
  
  | | Fixed architecture | Fixed spatial mapping | Fixed temporal mapping |
  |:----:|:----:|:----:|:----:|
  |Single cost estimation | True | True | True |
  | Temporal mapping exploration | True | True | False |
  | Temporal and spatial mapping exploration | True | False | False |
  | Complete DSE | False | False | False |
  
  The fixed temporal and spatial mapping can be defined in the mapping file. See [below]
  
  If the temporal mapping exploration is enabled, the workload and the precision of the precision of the operands has to be specified, beside the fixed architecture and spatial mapping.
  
  If spatial mapping exploration is enabled, different schemes must be defined in the mapping file. See [below]
  
  If Full DSE is enabled, the settings for the architecture genrator (max area, area utilization, mem_ratio ...) must be defined, beside the PE array size (in the architecture file) and the memory pool.
 
- Workload definition: The path to the python file that contains the description of each layer (```layer_filename```) and the list of layers (```layer_indices```) to be analyzed if exploration is carried out
- Temporal mapping exploration settings: ```search_method``` can be either defined ```heuristic``` or ```iterative```. If data reuse pruning is desired, ```data_reuse_threshold``` should be set to 1
- Architecture exploration settings
- Multiprocessing settings: If the workstation/server has multiple cores, multiple design points can be evaluated in parallel
  - ```layer_multiprocessing``` defines how many elements of the ```layer_indices``` list will be evaluated in parallel
  - ```architecture_multiprocessing``` defines how many architecture are evaluated in parallel


## Architecture file
The architecure settings file (to be defined with the  ``--arch`` flag) describes:
- The size of the PE array (```PE_array/nrows``` and ```PE_array/ncols```)
- A list of memory instances given as a hint (memory scheme hint)
- A list of memory instances that define the fixed architecture (in memory_hierarchy). They will be considered only if the ```fixed_architecture``` flag in the settings file is set to True.

A single memory instance is defined by its name, and a set of enlisted characteristics:
  - ```memory_instance```: refers to the element in the memory pool which is taken
  - ```bank_instances```: refers to the number of *separate* instances present in the architecture
  - ```operand_stored```: contains a list of the operands that the instance contains. The operands are defined as I (inputs), W (weights), O (outputs)
 
 ## MAC array file
The MAC array settings file (to be defined with the  ``--mac`` flag) describes:
 - The precision of each operand in bits. The precision of the partial sums is described by ```O_partial```, while the precision of the final outputs as ```O_final```
 - The cost of a single MAC (```single_mac_energy```)
 - The characteristics of the systolic flow of data in the array: 0 is horizontal, 1 is vertical, 2 is diagonal. It affects the utilization and eventual stallings within the array
 
 ## Mapping file
The Mapping description settings file (to be defined with the  ``--mac`` flag) describes the the fixed mapping and the fixed spatial mapping (if their respective flag is set in the settings file)

The mappings are defined for each operand *separately*

The nested loops are seprated by the level they belong to. The levels are indexed from the innermost in the hierarchy (level 0) to the outermost.

Within each level, the nested loops are enlisted from the innermost to the outermost. Each nested loop is defined as ```[loop_type, loop_size]``` where ```loop_type``` can FX, FY, OX, OY, C (input channels), K (output channels), B (batches).

A level in the hierarchy which does not hold any blocking is left empty (```[]```)

**If the fixed spatial mapping is not set the ```spatial_mapping_list``` must be defined.**

The spatial mapping list will contain a list of spatial mappings to be evaluated separately. Each spatial mapping is defined as two lists: one for the loop types (FX,FY,OX,...) unrolled along X and 
another for the loop types unrolled across Y.




 
